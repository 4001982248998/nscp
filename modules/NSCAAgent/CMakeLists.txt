CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

SET(TARGET NSCAAgent)
	
PROJECT(${TARGET})

SET(SRCS
	stdafx.cpp
	"${TARGET}.cpp"

	${NSCP_DEF_PLUGIN_CPP}
)

IF(HAVE_CRYPTOPP)
	SET(EXTRA_LIBS ${EXTRA_LIBS} cryptopp_static)
	SET(EXTRA_DEFINES ${EXTRA_DEFINES} -DHAVE_LIBCRYPTOPP)
ELSE(HAVE_CRYPTOPP)
	message(STATUS "WARNING: No libCrypto++ in NSCA Module")
ENDIF(HAVE_CRYPTOPP)

ADD_DEFINITIONS(${NSCP_GLOBAL_DEFINES})
ADD_DEFINITIONS(${EXTRA_DEFINES})

IF(WIN32)
	SET(SRCS ${SRCS}
		stdafx.h
		"${TARGET}.h"
		"${TARGET}.def"
		${NSCP_INCLUDEDIR}/nsca/nsca_packet.hpp
		${NSCP_INCLUDEDIR}/nsca/nsca_socket.hpp
		${NSCP_INCLUDEDIR}/nsca/nsca_enrypt.hpp
		${NSCP_INCLUDEDIR}/swap_bytes.hpp

		${NSCP_DEF_PLUGIN_HPP}
	)
ENDIF(WIN32)


add_library(${TARGET} MODULE ${SRCS})

target_link_libraries(${TARGET}
	${Boost_FILESYSTEM_LIBRARY}
	${NSCP_DEF_PLUGIN_LIB}
	${OPENSSL_LIBRARIES}
	${EXTRA_LIBS}
)
INCLUDE(${BUILD_CMAKE_FOLDER}/module.cmake)
