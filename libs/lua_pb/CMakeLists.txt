cmake_minimum_required(VERSION 2.6)
IF (PROTOC_GEN_LUA_FOUND AND HAVE_LUA)
	SET(LUA_SOURCE_DIR ${LUA_INCLUE_DIR})
	
	SET(TARGET lua_pb)

	SET(lua_pb_SOURCES
		${PROJECT_BINARY_DIR}/libs/lua_pb/lua-protobuf.cc
		${PROJECT_BINARY_DIR}/libs/lua_pb/Plugin.pb-lua.cc
	)
	SET(lua_pb_HEADERS
		${PROJECT_BINARY_DIR}/libs/lua_pb/lua-protobuf.h
		${PROJECT_BINARY_DIR}/libs/lua_pb/Plugin.pb-lua.h
	)
	
	INCLUDE_DIRECTORIES(${LUA_INCLUE_DIR})
	INCLUDE_DIRECTORIES(${PROJECT_BINARY_DIR}/libs/protobuf)
	
	SET_SOURCE_FILES_PROPERTIES(${lua_pb_SOURCES} PROPERTIES GENERATED TRUE)

	ADD_DEFINITIONS(${NSCP_GLOBAL_DEFINES})

	ADD_LIBRARY(${TARGET} ${lua_pb_SOURCES})
	target_link_libraries(${TARGET} ${PROTOBUF_LIBRARY} protobuf ${LUA_LIB})
	ADD_DEPENDENCIES(${TARGET} protobuf)

	SET_TARGET_PROPERTIES(${TARGET} PROPERTIES FOLDER "libraries")

	IF(CMAKE_COMPILER_IS_GNUCXX)
		IF("${CMAKE_SYSTEM_PROCESSOR}" STREQUAL "x86_64" AND NOT APPLE)
			SET_TARGET_PROPERTIES(${TARGET} PROPERTIES COMPILE_FLAGS -fPIC)
		ENDIF("${CMAKE_SYSTEM_PROCESSOR}" STREQUAL "x86_64" AND NOT APPLE)
	ENDIF(CMAKE_COMPILER_IS_GNUCXX)
ENDIF (PROTOC_GEN_LUA_FOUND AND HAVE_LUA)