cmake_minimum_required(VERSION 2.6)

LIST(APPEND cryptopp_SOURCES cryptopp.cpp)
IF (WIN32)
	LIST(APPEND cryptopp_SOURCES ${NSCP_INCLUDEDIR}/cryptopp/cryptopp.hpp)
ENDIF (WIN32)

IF(CRYPTOPP_FOUND)
	ADD_DEFINITIONS(-DHAVE_LIBCRYPTOPP)
	INCLUDE_DIRECTORIES(${CRYPTOPP_INCLUDE_DIR})
ELSE(CRYPTOPP_FOUND)
	MESSAGE(STATUS "   - Crypto++ not found (no ecryption support)")
ENDIF(CRYPTOPP_FOUND)

#IF (MSVC)
#	CMAKE_POLICY(SET CMP0008 NEW)
#	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /Oi")
#	IF(CMAKE_CXX_FLAGS MATCHES "/W[0-4]")
#		STRING(REGEX REPLACE "/W[0-4]" "" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
#	ENDIF(CMAKE_CXX_FLAGS MATCHES "/W[0-4]")
#ENDIF (MSVC)

ADD_LIBRARY(cryptopp STATIC  ${cryptopp_SOURCES})
SET_TARGET_PROPERTIES(cryptopp PROPERTIES FOLDER "libraries")

IF(CRYPTOPP_FOUND)
	TARGET_LINK_LIBRARIES(cryptopp ${CRYPTOPP_LIBRARIES})
ENDIF(CRYPTOPP_FOUND)

IF (WIN32)
	TARGET_LINK_LIBRARIES (cryptopp Ws2_32.lib)
ENDIF (WIN32)

IF(CMAKE_COMPILER_IS_GNUCXX)
	IF("${CMAKE_SYSTEM_PROCESSOR}" STREQUAL "x86_64" AND NOT APPLE)
		SET_TARGET_PROPERTIES(cryptopp PROPERTIES COMPILE_FLAGS -fPIC)
	ENDIF("${CMAKE_SYSTEM_PROCESSOR}" STREQUAL "x86_64" AND NOT APPLE)
ENDIF(CMAKE_COMPILER_IS_GNUCXX)
