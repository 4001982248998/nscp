cmake_minimum_required(VERSION 2.6)

SET(CRYPTOS des rijndael cast tea 3way blowfish twofish rc2 arc4 serpent gost )

IF (CRYPTOPP_FOUND)
	IF(CRYPTOPP_IS_LIB)
		MESSAGE(STATUS "   - Using Crypto++ library")
	
		LIST(APPEND cryptopp_SOURCES cryptopp.cpp)
		IF (WIN32)
			LIST(APPEND cryptopp_SOURCES ${NSCP_INCLUDEDIR}/cryptopp/cryptopp.hpp)
		ENDIF (WIN32)
		
	ELSE(CRYPTOPP_IS_LIB)
		MESSAGE(STATUS "   - Using Crypto++ sources")

		FOREACH(CRYPTO ${CRYPTOS})
			LIST(APPEND cryptopp_SOURCES ${CRYPTOPP_INCLUDE_DIR}/${CRYPTO}.cpp)
			IF (WIN32)
				LIST(APPEND cryptopp_SOURCES ${CRYPTOPP_INCLUDE_DIR}/${CRYPTO}.h)
			ENDIF (WIN32)
		ENDFOREACH(CRYPTO ${CRYPTOS})
		
		LIST(APPEND cryptopp_SOURCES ${CRYPTOPP_INCLUDE_DIR}/filters.cpp)
		LIST(APPEND cryptopp_SOURCES ${CRYPTOPP_INCLUDE_DIR}/osrng.cpp)
		LIST(APPEND cryptopp_SOURCES ${CRYPTOPP_INCLUDE_DIR}/modes.cpp)
		LIST(APPEND cryptopp_SOURCES ${CRYPTOPP_INCLUDE_DIR}/cryptlib.cpp)
		LIST(APPEND cryptopp_SOURCES ${CRYPTOPP_INCLUDE_DIR}/misc.cpp)
		LIST(APPEND cryptopp_SOURCES cryptopp.cpp)

		IF (WIN32)
			LIST(APPEND cryptopp_SOURCES ${CRYPTOPP_INCLUDE_DIR}/filters.h)
			LIST(APPEND cryptopp_SOURCES ${CRYPTOPP_INCLUDE_DIR}/osrng.h)
			LIST(APPEND cryptopp_SOURCES ${CRYPTOPP_INCLUDE_DIR}/modes.h)
			LIST(APPEND cryptopp_SOURCES ${CRYPTOPP_INCLUDE_DIR}/cryptlib.h)
			LIST(APPEND cryptopp_SOURCES ${CRYPTOPP_INCLUDE_DIR}/misc.h)
			LIST(APPEND cryptopp_SOURCES ${NSCP_INCLUDEDIR}/cryptopp/cryptopp.hpp)
		ENDIF (WIN32)
		
	ENDIF(CRYPTOPP_IS_LIB)

	IF (MSVC)
		CMAKE_POLICY(SET CMP0008 NEW)
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /Oi")
		IF(CMAKE_CXX_FLAGS MATCHES "/W[0-4]")
			STRING(REGEX REPLACE "/W[0-4]" "" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
		ENDIF(CMAKE_CXX_FLAGS MATCHES "/W[0-4]")
	ENDIF (MSVC)

	IF (WIN32)
		ADD_DEFINITIONS (-DCRYPTOPP_DISABLE_ASM -DUNICODE -D_UNICODE)
	ENDIF (WIN32)
	
	INCLUDE_DIRECTORIES(${CRYPTOPP_INCLUDE_DIR})

	ADD_LIBRARY(cryptopp_static STATIC  ${cryptopp_SOURCES})
	SET_TARGET_PROPERTIES(cryptopp_static PROPERTIES FOLDER "libraries")

	IF (WIN32)
		TARGET_LINK_LIBRARIES (cryptopp_static Ws2_32.lib)
	ENDIF (WIN32)

	IF(CMAKE_COMPILER_IS_GNUCXX)
		IF("${CMAKE_SYSTEM_PROCESSOR}" STREQUAL "x86_64" AND NOT APPLE)
			SET_TARGET_PROPERTIES(cryptopp_static PROPERTIES COMPILE_FLAGS -fPIC)
		ENDIF("${CMAKE_SYSTEM_PROCESSOR}" STREQUAL "x86_64" AND NOT APPLE)
	ENDIF(CMAKE_COMPILER_IS_GNUCXX)
ENDIF(CRYPTOPP_FOUND)
	