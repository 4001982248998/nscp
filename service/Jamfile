import feature : feature ;
import modules ;
import os ;
import errors ;
import stage ;
import common ;
import option ;

local target = NSClient++ ;

make $(target).exe.manifest : NSClient++.manifest : common.copy ;
explicit $(target).exe.manifest ;

notfile update_version : @update_version ;
actions update_version
{
	XAutobuild.exe -f $(TOP) 
}
explicit update_version ;

exe $(target)

	: # sources
	NSClient++.cpp
	NSCPlugin.cpp
	../include/NSCHelper.cpp
	../include/arrayBuffer.cpp
	../include/ServiceCmd.cpp
	../include/Socket.cpp
	../include/b64/b64.c

	: # requirements
	<dependency>$(target).exe.manifest
	#<runtime-link>static
	<find-static-library>ws2_32
	<find-static-library>Userenv
	<find-static-library>ole32
	<variant>release:<dependency>update_version 
	: # default build

	: # usage requirements
	;
